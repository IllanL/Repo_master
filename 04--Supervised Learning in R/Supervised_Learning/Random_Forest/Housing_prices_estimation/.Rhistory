library(MASS)
data(package="MASS")
Boston
boston<-Boston
dim(boston)
names(boston)
#-------------- Pregunta 2: datos de train ----------#
set.seed(101)
train = sample(1:nrow(boston), 300)
head(boston)
#-------------- Pregunta 3: Ajuste del modelo ----------#
rf.boston = randomForest(medv~, data = boston, subset = train)
#-------------- Pregunta 3: Ajuste del modelo ----------#
rf.boston = randomForest(medv~., data = boston, subset = train)
rf.boston
plot(rf.boston)
oob.err = double(13)
test.err = double(13)
for(mtry in 1:13){
fit = randomForest(medv~., data = boston, subset=train, mtry=mtry, ntree = 350)
oob.err[mtry] = fit$mse[350]
pred = predict(fit, boston[-train,])
test.err[mtry] = with(boston[-train,], mean( (medv-pred)^2 ))
}
plot(test.err)
plot(rf.boston)
oob.err = double(13)
test.err = double(13)
for(mtry in 1:13){
fit = randomForest(medv~., data = boston, subset=train, mtry=mtry, ntree = 350)
oob.err[mtry] = fit$mse[350]
pred = predict(fit, boston[-train,])
test.err[mtry] = with(boston[-train,], mean( (medv-pred)^2 ))
}
plot(test.err)
?randomForest
matplot(1:mtry, cbind(test.err, oob.err), pch = 23, col = c("red", "blue"), type = "b", ylab="Mean Squared Error")
legend("topright", legend = c("OOB", "Test"), pch = 23, col = c("red", "blue"))
library(MASS)
data(package="MASS")
boston<-Boston
dim(boston)
names(boston)
#-------------- Pregunta 2: datos de train ----------#
set.seed(101)
train = sample(1:nrow(NULL), NULL)
#-------------- Pregunta 3: Ajuste del modelo ----------#
rf.boston = randomForest(NULL, data = NULL, subset = NULL)
rf.boston
#-------------- Pregunta 3: Ajuste del modelo ----------#
rf.boston = randomForest(NULL, data = NULL, subset = NULL)
#-------------- Pregunta 3: Ajuste del modelo ----------#
rf.boston = randomForest(medv~., data = boston, subset = train)
sapply(boston,class)
train = sample(1:nrow(boston), 300)
#-------------- Pregunta 3: Ajuste del modelo ----------#
rf.boston = randomForest(medv~., data = boston, subset = train)
rf.boston
View(boston)
View(boston)
boston<-boston[sample(1:nrow(boston))]
train = sample(1:nrow(boston), 300)
#-------------- Pregunta 3: Ajuste del modelo ----------#
rf.boston = randomForest(medv~., data = boston, subset = train)
train = sample(1:nrow(boston), 300)
narboles=100
rf.boston = randomForest(medv~., data = boston, subset = train, ntree=narboles)
rf.boston
plot(rf.boston, main=paste("Error vs. ntress"))
plot(rf.boston, main=paste("Error vs. ntrees"))
par(mfrow=c(2,1))
plot(rf.boston, main=paste("Error vs. ntrees"))
par(mfrow=c(2,1))
plot(rf.boston, main=paste("Error vs. ntrees"))
par(mfrow=c(2,1))
narboles=30
rf.boston = randomForest(medv~., data = boston, subset = train, ntree=narboles)
rf.boston
#-------------- Pregunta 4: Arboles vs. error ----------#
plot(rf.boston, main=paste("Error vs. ntrees"))
par(mfrow=c(2,1))
plot(rf.boston, main=paste("Error vs. ntrees"))
par(mfrow=c(2,1))
narboles=100
rf.boston = randomForest(medv~., data = boston, subset = train, ntree=narboles)
rf.boston
plot(rf.boston, main=paste("Error vs. ntrees"))
par(mfrow=c(2,1))
#-------------- Pregunta 3: Ajuste del modelo ----------#
narboles=30
rf.boston = randomForest(medv~., data = boston, subset = train, ntree=narboles)
rf.boston
plot(rf.boston, main=paste("Error vs. ntrees"))
par(mfrow=c(2,1))
#-------------- Pregunta 3: Ajuste del modelo ----------#
narboles=100
rf.boston = randomForest(medv~., data = boston, subset = train, ntree=narboles)
rf.boston
plot(rf.boston, main=paste("Error vs. ntrees"))
par(mfrow=c(2,1))
#-------------- Pregunta 3: Ajuste del modelo ----------#
narboles=100
narboles=100
rf.boston = randomForest(medv~., data = boston, subset = train, ntree=narboles)
rf.boston
#-------------- Pregunta 4: Arboles vs. error ----------#
plot(rf.boston, main=paste("Error vs. ntrees", narboles))
par(mfrow=c(2,1))
narboles=30
rf.boston = randomForest(medv~., data = boston, subset = train, ntree=narboles)
rf.boston
#-------------- Pregunta 4: Arboles vs. error ----------#
plot(rf.boston, main=paste("Error vs. ntrees", narboles))
par(mfrow=c(2,1))
narboles=100
rf.boston = randomForest(medv~., data = boston, subset = train, ntree=narboles)
rf.boston
#-------------- Pregunta 4: Arboles vs. error ----------#
plot(rf.boston, main=paste("Error vs. ntrees", narboles))
par(mfrow=c(2,1))
oob.err = double(ncol(boston)-1)
test.err = double(ncol(boston)-1)
for(nvariables in 1:(ncol(boston)-1){
fit = randomForest(medv~., data = boston, subset=train, mtry=nvariables, ntree = 350)
oob.err[nvariables] = fit$mse[350]
pred = predict(fit, boston[-train,])
test.err[nvariables] = with(boston[-train,], mean( (medv-pred)^2 ))
}
nvariables=5
oob.err = double(ncol(boston)-1)
test.err = double(ncol(boston)-1)
for(nvariables in 1:(ncol(boston)-1){
fit = randomForest(medv~., data = boston, subset=train, mtry=nvariables, ntree = 350)
oob.err[nvariables] = fit$mse[350]
pred = predict(fit, boston[-train,])
test.err[nvariables] = with(boston[-train,], mean( (medv-pred)^2 ))
}
oob.err = double(ncol(boston)-1)
test.err = double(ncol(boston)-1)
for(nvariables in 1:(ncol(boston)-1){
fit = randomForest(medv~., data = boston, subset=train, mtry=nvariables, ntree = 350)
oob.err[nvariables] = fit$mse[350]
pred = predict(fit, boston[-train,])
test.err[nvariables] = with(boston[-train,], mean( (medv-pred)^2 ))
for(nvariables in 1:(ncol(boston)-1)){
fit = randomForest(medv~., data = boston, subset=train, mtry=nvariables, ntree = 350)
oob.err[nvariables] = fit$mse[350]
pred = predict(fit, boston[-train,])
test.err[nvariables] = with(boston[-train,], mean( (medv-pred)^2 ))
}
test.err
nvariables=13
oob.err = double(ncol(boston)-1)
test.err = double(ncol(boston)-1)
for(nvariables in 1:(ncol(boston)-1)){
fit = randomForest(medv~., data = boston, subset=train, mtry=nvariables, ntree = 350)
oob.err[nvariables] = fit$mse[350]
pred = predict(fit, boston[-train,])
test.err[nvariables] = with(boston[-train,], mean( (medv-pred)^2 ))
}
test.err
matplot(1:mtry, cbind(test.err, oob.err), pch = 23, col = c("red", "blue"), type = "b", ylab="Mean Squared Error")
legend("topright", legend = c("OOB", "Test"), pch = 23, col = c("red", "blue"))
matplot(1:nvariables, cbind(test.err, oob.err), pch = 23, col = c("red", "blue"), type = "b", ylab="Mean Squared Error")
legend("topright", legend = c("OOB", "Test"), pch = 23, col = c("red", "blue"))
par(mfrow=c(1,1))
matplot(1:nvariables, cbind(test.err, oob.err), pch = 23, col = c("red", "blue"), type = "b", ylab="Mean Squared Error")
legend("topright", legend = c("OOB", "Test"), pch = 23, col = c("red", "blue"))
